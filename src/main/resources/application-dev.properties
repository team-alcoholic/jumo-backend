# import
spring.config.import=optional:aws-secretsmanager:dev/jumo/server
# Application settings
spring.application.name=jumo-server
server.servlet.context-path=/api/v1
service.url=https://dev.jumo.im
# Swagger settings
#springdoc.swagger-ui.enabled=false
#springdoc.api-docs.enabled=false
# Kakao OAuth2 settings
spring.security.oauth2.client.registration.kakao.client-name=${KAKAO_CLIENT_NAME}
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.redirect-uri=${service.url}${server.servlet.context-path}/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
# Logging settings
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
# MySQL Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER}
# Hibernate settings
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# AWS CloudWatch Configuration
cloudwatch.name=jumo-server-dev-lg
cloudwatch.accesskey=${LOGGER_ACCESS}
cloudwatch.secretkey=${LOGGER_SECRET}
# OpenSearch
opensearch.host=${OPENSEARCH_HOST}
opensearch.username=${OPENSEARCH_USERNAME}
opensearch.password=${OPENSEARCH_PASSWORD}
# openai api
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o-2024-08-06
spring.ai.openai.chat.options.response-format.type=JSON_SCHEMA
spring.ai.openai.chat.options.response-format.name=MySchemaName
spring.ai.openai.chat.options.response-format.schema={"type":"object","properties":{"noseNotes":{"type":"array","items":{"type":"string"}},"palateNotes":{"type":"array","items":{"type":"string"}},"finishNotes":{"type":"array","items":{"type":"string"}}},"required":["noseNotes","palateNotes","finishNotes"],"additionalProperties":false}
spring.ai.openai.chat.options.response-format.strict=true